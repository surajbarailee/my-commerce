service: backend

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  profile: serverless
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:BatchGetItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource:
        Fn::GetAtt:
          - Products
          - StreamArn
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: Thumbnail
            - "/*"
  apiGateWay:
    apiKeys:
      - MyCommerceApiKeys
    usagePlan:
      quota:
        limit: 1000
        period: MONTH
      throttle:
        rateLimit: 50
        burstLimit: 100

plugins:
  - serverless-webpack

package:
  individually: true

custom:
  tableName: products
  thumbnailBucketName: mycommercethumbnailbucket

functions:
  getProductsList:
    handler: lambdas/api-endpoints/getProductsList.handler
    events:
      - http:
          path: products
          method: GET
          cors: true
          private: true

  addProduct:
    handler: lambdas/api-endpoints/addProduct.handler
    events:
      - http:
          path: products
          method: POST
          cors: true
          private: true

  deleteProduct:
    handler: lambdas/api-endpoints/deleteProduct.handler
    events:
      - http:
          path: products/{id}
          method: DELETE
          cors: true
          private: true

  generateThumbnail:
    handler: lambdas/utilities/generateThumbnail.handler
    timeout: 60
    memorySize: 2048
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - Products
              - StreamArn
          maximumRetryAttempts: 1
          startingPosition: LATEST
          batchSize: 1
          enabled: true
    environment:
      THUMBNAIL_BUCKET: ${self:custom.thumbnailBucketName}

resources:
  Resources:
    Thumbnail:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.thumbnailBucketName}
    Products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE

configValidationMode: error
